package Programing;

import java.util.Random;

import dev.failsafe.internal.util.Assert;

//import java.util.Scanner;

public class Program1 {
	
	public void factorial(int num)
	{
		int fact=num;
		for(int i=0;i<num;i++)
			fact=fact*num;
		
		System.out.println(fact);
	}
	
	public static int recursion(int num)
	{
		return (num*recursion(num-1));		
	}
	
	public static void armstrong(int num)
	{
		int ar=num, n=0, cube=0;
		while(num>0)
		{
			n%=10;
			num/=10;
			cube=cube+(n*n*n);
		}
		if(cube==ar)
			System.out.println("is armstrong");
		else
			System.out.println("is not armstrong");
	}
	
	public void palindrom(int num)
	{
		int newNum=num, rev=0, a=0;
		while(num>0)
		{
			a%=10;
			num/=10;
			rev*=10+a;
		}
		if(newNum==rev)
			System.out.println("is palindrom");
		else
			System.out.println("is not palindrom");
	}
	
	public static void primNumber(int num)
	{		
		boolean flag=true;
		for(int i=2;i<num;i++)
		{
			if(num%i==0)
			{
				flag=false;
				break;
			}
		}
		if(flag==true)
			System.out.println("is palindrom");
		else
			System.out.print("is not palindrom");
	}
	
	public static void stringPalindrom(String str)
	{
		String rev="";
		for(int i=str.length()-1;i>=0;i--)
		{
			rev=rev+str.charAt(i);
		}
		if(str.equals(rev))
			System.out.println("is palindrom");
		else
			System.out.println("is not palindrom");
	}
	public static void swap(int n, int m)
	{
		int temp;
		temp=n;
		   n=m;
		  m=temp;
		  System.out.println(n+" "+m);
	}
	
	
	public static void java1()
	{
		Random rand=new Random();
		int num=rand.nextInt(10000);
		System.out.println("hello java"+num);
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int num=5;
		
		Program1 pro=new Program1();
		pro.factorial(num);
		
		int fac=recursion(num);
		System.out.println(fac);
		
		armstrong(371);
		
		pro.palindrom(10);
		
		Program1.primNumber(10);
		
		Program1.stringPalindrom("chacha");
		
		java1();
		
		swap(5,6);
		
	}

}
